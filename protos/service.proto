syntax = "proto3";

package tasktimer;

import "google/protobuf/timestamp.proto";

option go_package = "github.com/nivista/tasktimer/.gen;pb";

service TaskTimer {
    rpc CreateTimer (CreateTimerRequest) returns (CreateTimerResponse) {}

    rpc DeleteTimer (DeleteTimerRequest) returns (DeleteTimerResponse) {}

    rpc GetTimer (GetTimerRequest) returns (GetTimerResponse) {}
}

message CreateTimerRequest {
    string account = 1;
    TaskConfig task_config = 2;
    ScheduleConfig schedule_config = 3;
}

message CreateTimerResponse {
    string id = 1;
}

message DeleteTimerRequest {
    string account = 1;
    string id = 2;
}

message DeleteTimerResponse {}

message GetTimerRequest {
    string account = 1;
    string id = 2;
}

message GetTimerResponse {
    bytes id = 1;
    uint32 execution_count = 2;
    Meta meta = 3;
    TaskConfig task_config = 4;
    ScheduleConfig schedule_config = 5;
}

message ScheduleConfig {
    oneof schedule_config {
        CronConfig cron_config = 1;
        IntervalConfig interval_config = 2;
    }
}

message TaskConfig {
    oneof task_config {
        HTTPConfig http_config = 1;
    }
}

message Meta {
    google.protobuf.Timestamp create_time = 1;
}

enum Method {
    GET = 0;
    POST = 1;
}

message HTTPConfig {
    string url = 1;
    Method method = 2;
    string body = 3;
    repeated string headers = 4;
}

message IntervalConfig {
    google.protobuf.Timestamp start_time = 1;
    int32 interval = 2;
    sint32 executions = 3;
}

message CronConfig {
    google.protobuf.Timestamp start_time = 1;
    string cron = 2;
    sint32 executions = 3;
}